"""User changes

Revision ID: b1bc80c3486c
Revises: fb62f2304602
Create Date: 2025-03-24 00:37:08.907833

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'b1bc80c3486c'
down_revision: Union[str, None] = 'fb62f2304602'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('auth_group_permissions_group_id_b120cbf9', table_name='auth_group_permissions')
    op.drop_index('auth_group_permissions_permission_id_84c5c92e', table_name='auth_group_permissions')
    op.drop_table('auth_group_permissions')
    op.drop_table('django_content_type')
    op.drop_index('django_celery_beat_periodictask_clocked_id_47a69f82', table_name='django_celery_beat_periodictask')
    op.drop_index('django_celery_beat_periodictask_crontab_id_d3cba168', table_name='django_celery_beat_periodictask')
    op.drop_index('django_celery_beat_periodictask_interval_id_a8ca27da', table_name='django_celery_beat_periodictask')
    op.drop_index('django_celery_beat_periodictask_name_265a36b7_like', table_name='django_celery_beat_periodictask')
    op.drop_index('django_celery_beat_periodictask_solar_id_a87ce72c', table_name='django_celery_beat_periodictask')
    op.drop_table('django_celery_beat_periodictask')
    op.drop_index('user_management_user_user_permissions_permission_id_d8c2b1e9', table_name='users_user_permissions')
    op.drop_index('user_management_user_user_permissions_user_id_4b8c2c7b', table_name='users_user_permissions')
    op.drop_table('users_user_permissions')
    op.drop_table('django_celery_beat_clockedschedule')
    op.drop_table('django_celery_beat_periodictasks')
    op.drop_table('django_celery_beat_solarschedule')
    op.drop_table('task_manager_task')
    op.drop_table('django_celery_beat_crontabschedule')
    op.drop_index('user_management_user_groups_group_id_6f577055', table_name='users_groups')
    op.drop_index('user_management_user_groups_user_id_092e6f6b', table_name='users_groups')
    op.drop_table('users_groups')
    op.drop_index('idx_permissions_deleted_at', table_name='permissions')
    op.drop_table('permissions')
    op.drop_index('idx_role_permissions_deleted_at', table_name='role_permissions')
    op.drop_table('role_permissions')
    op.drop_index('idx_roles_deleted_at', table_name='roles')
    op.drop_table('roles')
    op.drop_index('django_admin_log_content_type_id_c4bce8eb', table_name='django_admin_log')
    op.drop_index('django_admin_log_user_id_c564eba6', table_name='django_admin_log')
    op.drop_table('django_admin_log')
    op.drop_table('django_celery_beat_intervalschedule')
    op.drop_index('auth_group_name_a6ea08ec_like', table_name='auth_group')
    op.drop_table('auth_group')
    op.drop_index('django_session_expire_date_a5c62663', table_name='django_session')
    op.drop_index('django_session_session_key_c0390e0f_like', table_name='django_session')
    op.drop_table('django_session')
    op.drop_index('authtoken_token_key_10f0b77e_like', table_name='authtoken_token')
    op.drop_table('authtoken_token')
    op.drop_table('django_migrations')
    op.drop_index('auth_permission_content_type_id_2f476e4b', table_name='auth_permission')
    op.drop_table('auth_permission')
    op.add_column('users', sa.Column('username', sa.String(length=255), nullable=False))
    op.add_column('users', sa.Column('hashed_password', sa.String(length=255), nullable=False))
    op.alter_column('users', 'id',
               existing_type=sa.BIGINT(),
               server_default=None,
               type_=sa.Integer(),
               existing_nullable=False,
               autoincrement=True)
    op.drop_index('user_management_user_email_77d0b08f_like', table_name='users')
    op.drop_constraint('user_management_user_email_key', 'users', type_='unique')
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_index(op.f('ix_users_username'), 'users', ['username'], unique=True)
    op.drop_column('users', 'is_staff')
    op.drop_column('users', 'is_active')
    op.drop_column('users', 'email')
    op.drop_column('users', 'password')
    op.drop_column('users', 'is_superuser')
    op.drop_column('users', 'last_name')
    op.drop_column('users', 'last_login')
    op.drop_column('users', 'first_name')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('users', sa.Column('first_name', sa.VARCHAR(length=255), autoincrement=False, nullable=False))
    op.add_column('users', sa.Column('last_login', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True))
    op.add_column('users', sa.Column('last_name', sa.VARCHAR(length=255), autoincrement=False, nullable=False))
    op.add_column('users', sa.Column('is_superuser', sa.BOOLEAN(), autoincrement=False, nullable=False))
    op.add_column('users', sa.Column('password', sa.VARCHAR(length=128), autoincrement=False, nullable=False))
    op.add_column('users', sa.Column('email', sa.VARCHAR(length=255), autoincrement=False, nullable=False))
    op.add_column('users', sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=False))
    op.add_column('users', sa.Column('is_staff', sa.BOOLEAN(), autoincrement=False, nullable=False))
    op.drop_index(op.f('ix_users_username'), table_name='users')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.create_unique_constraint('user_management_user_email_key', 'users', ['email'])
    op.create_index('user_management_user_email_77d0b08f_like', 'users', ['email'], unique=False)
    op.alter_column('users', 'id',
               existing_type=sa.Integer(),
               server_default=sa.Identity(always=False, start=1, increment=1, minvalue=1, maxvalue=9223372036854775807, cycle=False, cache=1),
               type_=sa.BIGINT(),
               existing_nullable=False,
               autoincrement=True)
    op.drop_column('users', 'hashed_password')
    op.drop_column('users', 'username')
    op.create_table('auth_permission',
    sa.Column('id', sa.INTEGER(), sa.Identity(always=False, start=1, increment=1, minvalue=1, maxvalue=2147483647, cycle=False, cache=1), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('content_type_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('codename', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['content_type_id'], ['django_content_type.id'], name='auth_permission_content_type_id_2f476e4b_fk_django_co', initially='DEFERRED', deferrable=True),
    sa.PrimaryKeyConstraint('id', name='auth_permission_pkey'),
    sa.UniqueConstraint('content_type_id', 'codename', name='auth_permission_content_type_id_codename_01ab375a_uniq'),
    postgresql_ignore_search_path=False
    )
    op.create_index('auth_permission_content_type_id_2f476e4b', 'auth_permission', ['content_type_id'], unique=False)
    op.create_table('django_migrations',
    sa.Column('id', sa.BIGINT(), sa.Identity(always=False, start=1, increment=1, minvalue=1, maxvalue=9223372036854775807, cycle=False, cache=1), autoincrement=True, nullable=False),
    sa.Column('app', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('applied', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='django_migrations_pkey')
    )
    op.create_table('authtoken_token',
    sa.Column('key', sa.VARCHAR(length=40), autoincrement=False, nullable=False),
    sa.Column('created', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='authtoken_token_user_id_35299eff_fk_user_management_user_id', initially='DEFERRED', deferrable=True),
    sa.PrimaryKeyConstraint('key', name='authtoken_token_pkey'),
    sa.UniqueConstraint('user_id', name='authtoken_token_user_id_key')
    )
    op.create_index('authtoken_token_key_10f0b77e_like', 'authtoken_token', ['key'], unique=False)
    op.create_table('django_session',
    sa.Column('session_key', sa.VARCHAR(length=40), autoincrement=False, nullable=False),
    sa.Column('session_data', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('expire_date', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('session_key', name='django_session_pkey')
    )
    op.create_index('django_session_session_key_c0390e0f_like', 'django_session', ['session_key'], unique=False)
    op.create_index('django_session_expire_date_a5c62663', 'django_session', ['expire_date'], unique=False)
    op.create_table('auth_group',
    sa.Column('id', sa.INTEGER(), sa.Identity(always=False, start=1, increment=1, minvalue=1, maxvalue=2147483647, cycle=False, cache=1), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(length=150), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='auth_group_pkey'),
    sa.UniqueConstraint('name', name='auth_group_name_key'),
    postgresql_ignore_search_path=False
    )
    op.create_index('auth_group_name_a6ea08ec_like', 'auth_group', ['name'], unique=False)
    op.create_table('django_celery_beat_intervalschedule',
    sa.Column('id', sa.INTEGER(), sa.Identity(always=False, start=1, increment=1, minvalue=1, maxvalue=2147483647, cycle=False, cache=1), autoincrement=True, nullable=False),
    sa.Column('every', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('period', sa.VARCHAR(length=24), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='django_celery_beat_intervalschedule_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('django_admin_log',
    sa.Column('id', sa.INTEGER(), sa.Identity(always=False, start=1, increment=1, minvalue=1, maxvalue=2147483647, cycle=False, cache=1), autoincrement=True, nullable=False),
    sa.Column('action_time', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.Column('object_id', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('object_repr', sa.VARCHAR(length=200), autoincrement=False, nullable=False),
    sa.Column('action_flag', sa.SMALLINT(), autoincrement=False, nullable=False),
    sa.Column('change_message', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('content_type_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('user_id', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.CheckConstraint('action_flag >= 0', name='django_admin_log_action_flag_check'),
    sa.ForeignKeyConstraint(['content_type_id'], ['django_content_type.id'], name='django_admin_log_content_type_id_c4bce8eb_fk_django_co', initially='DEFERRED', deferrable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='django_admin_log_user_id_c564eba6_fk_user_management_user_id', initially='DEFERRED', deferrable=True),
    sa.PrimaryKeyConstraint('id', name='django_admin_log_pkey')
    )
    op.create_index('django_admin_log_user_id_c564eba6', 'django_admin_log', ['user_id'], unique=False)
    op.create_index('django_admin_log_content_type_id_c4bce8eb', 'django_admin_log', ['content_type_id'], unique=False)
    op.create_table('roles',
    sa.Column('id', sa.BIGINT(), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('deleted_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='roles_pkey')
    )
    op.create_index('idx_roles_deleted_at', 'roles', ['deleted_at'], unique=False)
    op.create_table('role_permissions',
    sa.Column('role_id', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.Column('permission_id', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.Column('id', sa.BIGINT(), autoincrement=True, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('deleted_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('role_id', 'permission_id', name='role_permissions_pkey')
    )
    op.create_index('idx_role_permissions_deleted_at', 'role_permissions', ['deleted_at'], unique=False)
    op.create_table('permissions',
    sa.Column('id', sa.BIGINT(), autoincrement=True, nullable=False),
    sa.Column('name', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('deleted_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='permissions_pkey'),
    sa.UniqueConstraint('name', name='uni_permissions_name')
    )
    op.create_index('idx_permissions_deleted_at', 'permissions', ['deleted_at'], unique=False)
    op.create_table('users_groups',
    sa.Column('id', sa.BIGINT(), sa.Identity(always=False, start=1, increment=1, minvalue=1, maxvalue=9223372036854775807, cycle=False, cache=1), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.Column('group_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['group_id'], ['auth_group.id'], name='user_management_user_groups_group_id_6f577055_fk_auth_group_id', initially='DEFERRED', deferrable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='user_management_user_user_id_092e6f6b_fk_user_mana', initially='DEFERRED', deferrable=True),
    sa.PrimaryKeyConstraint('id', name='user_management_user_groups_pkey'),
    sa.UniqueConstraint('user_id', 'group_id', name='user_management_user_groups_user_id_group_id_bed1779a_uniq')
    )
    op.create_index('user_management_user_groups_user_id_092e6f6b', 'users_groups', ['user_id'], unique=False)
    op.create_index('user_management_user_groups_group_id_6f577055', 'users_groups', ['group_id'], unique=False)
    op.create_table('django_celery_beat_crontabschedule',
    sa.Column('id', sa.INTEGER(), sa.Identity(always=False, start=1, increment=1, minvalue=1, maxvalue=2147483647, cycle=False, cache=1), autoincrement=True, nullable=False),
    sa.Column('minute', sa.VARCHAR(length=240), autoincrement=False, nullable=False),
    sa.Column('hour', sa.VARCHAR(length=96), autoincrement=False, nullable=False),
    sa.Column('day_of_week', sa.VARCHAR(length=64), autoincrement=False, nullable=False),
    sa.Column('day_of_month', sa.VARCHAR(length=124), autoincrement=False, nullable=False),
    sa.Column('month_of_year', sa.VARCHAR(length=64), autoincrement=False, nullable=False),
    sa.Column('timezone', sa.VARCHAR(length=63), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='django_celery_beat_crontabschedule_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('task_manager_task',
    sa.Column('id', sa.BIGINT(), sa.Identity(always=False, start=1, increment=1, minvalue=1, maxvalue=9223372036854775807, cycle=False, cache=1), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('status', sa.VARCHAR(length=10), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='task_manager_task_pkey')
    )
    op.create_table('django_celery_beat_solarschedule',
    sa.Column('id', sa.INTEGER(), sa.Identity(always=False, start=1, increment=1, minvalue=1, maxvalue=2147483647, cycle=False, cache=1), autoincrement=True, nullable=False),
    sa.Column('event', sa.VARCHAR(length=24), autoincrement=False, nullable=False),
    sa.Column('latitude', sa.NUMERIC(precision=9, scale=6), autoincrement=False, nullable=False),
    sa.Column('longitude', sa.NUMERIC(precision=9, scale=6), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='django_celery_beat_solarschedule_pkey'),
    sa.UniqueConstraint('event', 'latitude', 'longitude', name='django_celery_beat_solar_event_latitude_longitude_ba64999a_uniq'),
    postgresql_ignore_search_path=False
    )
    op.create_table('django_celery_beat_periodictasks',
    sa.Column('ident', sa.SMALLINT(), autoincrement=False, nullable=False),
    sa.Column('last_update', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('ident', name='django_celery_beat_periodictasks_pkey')
    )
    op.create_table('django_celery_beat_clockedschedule',
    sa.Column('id', sa.INTEGER(), sa.Identity(always=False, start=1, increment=1, minvalue=1, maxvalue=2147483647, cycle=False, cache=1), autoincrement=True, nullable=False),
    sa.Column('clocked_time', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='django_celery_beat_clockedschedule_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('users_user_permissions',
    sa.Column('id', sa.BIGINT(), sa.Identity(always=False, start=1, increment=1, minvalue=1, maxvalue=9223372036854775807, cycle=False, cache=1), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.Column('permission_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['permission_id'], ['auth_permission.id'], name='user_management_user_permission_id_d8c2b1e9_fk_auth_perm', initially='DEFERRED', deferrable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='user_management_user_user_id_4b8c2c7b_fk_user_mana', initially='DEFERRED', deferrable=True),
    sa.PrimaryKeyConstraint('id', name='user_management_user_user_permissions_pkey'),
    sa.UniqueConstraint('user_id', 'permission_id', name='user_management_user_use_user_id_permission_id_c71a3268_uniq')
    )
    op.create_index('user_management_user_user_permissions_user_id_4b8c2c7b', 'users_user_permissions', ['user_id'], unique=False)
    op.create_index('user_management_user_user_permissions_permission_id_d8c2b1e9', 'users_user_permissions', ['permission_id'], unique=False)
    op.create_table('django_celery_beat_periodictask',
    sa.Column('id', sa.INTEGER(), sa.Identity(always=False, start=1, increment=1, minvalue=1, maxvalue=2147483647, cycle=False, cache=1), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(length=200), autoincrement=False, nullable=False),
    sa.Column('task', sa.VARCHAR(length=200), autoincrement=False, nullable=False),
    sa.Column('args', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('kwargs', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('queue', sa.VARCHAR(length=200), autoincrement=False, nullable=True),
    sa.Column('exchange', sa.VARCHAR(length=200), autoincrement=False, nullable=True),
    sa.Column('routing_key', sa.VARCHAR(length=200), autoincrement=False, nullable=True),
    sa.Column('expires', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('enabled', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('last_run_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('total_run_count', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('date_changed', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('crontab_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('interval_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('solar_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('one_off', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('start_time', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('priority', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('headers', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('clocked_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('expire_seconds', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.CheckConstraint('expire_seconds >= 0', name='django_celery_beat_periodictask_expire_seconds_check'),
    sa.CheckConstraint('priority >= 0', name='django_celery_beat_periodictask_priority_check'),
    sa.CheckConstraint('total_run_count >= 0', name='django_celery_beat_periodictask_total_run_count_check'),
    sa.ForeignKeyConstraint(['clocked_id'], ['django_celery_beat_clockedschedule.id'], name='django_celery_beat_p_clocked_id_47a69f82_fk_django_ce', initially='DEFERRED', deferrable=True),
    sa.ForeignKeyConstraint(['crontab_id'], ['django_celery_beat_crontabschedule.id'], name='django_celery_beat_p_crontab_id_d3cba168_fk_django_ce', initially='DEFERRED', deferrable=True),
    sa.ForeignKeyConstraint(['interval_id'], ['django_celery_beat_intervalschedule.id'], name='django_celery_beat_p_interval_id_a8ca27da_fk_django_ce', initially='DEFERRED', deferrable=True),
    sa.ForeignKeyConstraint(['solar_id'], ['django_celery_beat_solarschedule.id'], name='django_celery_beat_p_solar_id_a87ce72c_fk_django_ce', initially='DEFERRED', deferrable=True),
    sa.PrimaryKeyConstraint('id', name='django_celery_beat_periodictask_pkey'),
    sa.UniqueConstraint('name', name='django_celery_beat_periodictask_name_key')
    )
    op.create_index('django_celery_beat_periodictask_solar_id_a87ce72c', 'django_celery_beat_periodictask', ['solar_id'], unique=False)
    op.create_index('django_celery_beat_periodictask_name_265a36b7_like', 'django_celery_beat_periodictask', ['name'], unique=False)
    op.create_index('django_celery_beat_periodictask_interval_id_a8ca27da', 'django_celery_beat_periodictask', ['interval_id'], unique=False)
    op.create_index('django_celery_beat_periodictask_crontab_id_d3cba168', 'django_celery_beat_periodictask', ['crontab_id'], unique=False)
    op.create_index('django_celery_beat_periodictask_clocked_id_47a69f82', 'django_celery_beat_periodictask', ['clocked_id'], unique=False)
    op.create_table('django_content_type',
    sa.Column('id', sa.INTEGER(), sa.Identity(always=False, start=1, increment=1, minvalue=1, maxvalue=2147483647, cycle=False, cache=1), autoincrement=True, nullable=False),
    sa.Column('app_label', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('model', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='django_content_type_pkey'),
    sa.UniqueConstraint('app_label', 'model', name='django_content_type_app_label_model_76bd3d3b_uniq'),
    postgresql_ignore_search_path=False
    )
    op.create_table('auth_group_permissions',
    sa.Column('id', sa.BIGINT(), sa.Identity(always=False, start=1, increment=1, minvalue=1, maxvalue=9223372036854775807, cycle=False, cache=1), autoincrement=True, nullable=False),
    sa.Column('group_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('permission_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['group_id'], ['auth_group.id'], name='auth_group_permissions_group_id_b120cbf9_fk_auth_group_id', initially='DEFERRED', deferrable=True),
    sa.ForeignKeyConstraint(['permission_id'], ['auth_permission.id'], name='auth_group_permissio_permission_id_84c5c92e_fk_auth_perm', initially='DEFERRED', deferrable=True),
    sa.PrimaryKeyConstraint('id', name='auth_group_permissions_pkey'),
    sa.UniqueConstraint('group_id', 'permission_id', name='auth_group_permissions_group_id_permission_id_0cd325b0_uniq')
    )
    op.create_index('auth_group_permissions_permission_id_84c5c92e', 'auth_group_permissions', ['permission_id'], unique=False)
    op.create_index('auth_group_permissions_group_id_b120cbf9', 'auth_group_permissions', ['group_id'], unique=False)
    # ### end Alembic commands ###
